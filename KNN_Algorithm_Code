import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
from matplotlib.colors import ListedColormap

# dataset is already loaded in df
print(df.head())

X=df[['Age','EstimatedSalary']].values
y=df['Purchased'].values

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.25,random_state=42)

scaler=StandardScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)

knn=KNeighborsClassifier(n_neighbors=5)
knn.fit(X_train,y_train)

y_pred=knn.predict(X_test)

print("Accuracy:",round(accuracy_score(y_test,y_pred),3))
print("Confusion Matrix:\n",confusion_matrix(y_test,y_pred))

def plot_boundary(X,y,title):
    X1,X2=np.meshgrid(
        np.arange(start=X[:,0].min()-1,stop=X[:,0].max()+1,step=0.01),
        np.arange(start=X[:,1].min()-1,stop=X[:,1].max()+1,step=0.01)
    )
    plt.contourf(X1,X2,knn.predict(np.c_[X1.ravel(),X2.ravel()]).reshape(X1.shape),
                 alpha=0.3,cmap=ListedColormap(('red','green')))
    plt.scatter(X[:,0],X[:,1],c=y,cmap=ListedColormap(('red','green')),edgecolor='k')
    plt.title(title)
    plt.xlabel("Age (scaled)")
    plt.ylabel("Salary (scaled)")
    plt.show()

plot_boundary(X_train,y_train,"KNN (Training set)")
plot_boundary(X_test,y_test,"KNN (Test set)")
